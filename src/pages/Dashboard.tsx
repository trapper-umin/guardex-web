import React, { useEffect, useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { useAuth } from '../context/AuthContext';
import { ROUTES } from '../utils/routes';
import { getSubscriptionStatus, getVpnConfig, regenerateVpnConfig, type SubscriptionStatus } from '../services/api';
import { SubscriptionModal, PageWrapper } from '../components';
import { buttonStyles, cardStyles } from '../utils/styles';
import { notifications } from '../utils/notifications';

const Dashboard: React.FC = () => {
  const { user, isAuthenticated } = useAuth();
  const navigate = useNavigate();
  
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –∏ –ª–æ–∞–¥–µ—Ä–æ–≤
  const [subscription, setSubscription] = useState<SubscriptionStatus | null>(null);
  const [isLoadingSubscription, setIsLoadingSubscription] = useState(true);
  const [isDownloadingConfig, setIsDownloadingConfig] = useState(false);
  const [isRegeneratingKey, setIsRegeneratingKey] = useState(false);
  const [isSubscriptionModalOpen, setIsSubscriptionModalOpen] = useState(false);

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    if (!isAuthenticated) {
      navigate(ROUTES.LOGIN);
    }
  }, [isAuthenticated, navigate]);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–¥–ø–∏—Å–∫–µ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    if (isAuthenticated) {
      loadSubscriptionData();
    }
  }, [isAuthenticated]);

  // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–¥–ø–∏—Å–∫–µ
  const loadSubscriptionData = async () => {
    try {
      setIsLoadingSubscription(true);
      const data = await getSubscriptionStatus();
      setSubscription(data);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–∫–∏:', error);
      notifications.general.loadingError();
    } finally {
      setIsLoadingSubscription(false);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è VPN –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  const handleDownloadConfig = async () => {
    try {
      setIsDownloadingConfig(true);
      const configBlob = await getVpnConfig();
      
      // –°–æ–∑–¥–∞–µ–º URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
      const url = URL.createObjectURL(configBlob);
      const link = document.createElement('a');
      link.href = url;
      link.download = `vpn-config-${Date.now()}.conf`;
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
      
      // –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –ø–∞–º—è—Ç—å
      URL.revokeObjectURL(url);
      
      notifications.vpn.configDownloaded();
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:', error);
      notifications.vpn.configError();
    } finally {
      setIsDownloadingConfig(false);
    }
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª—é—á–∞
  const handleRegenerateKey = async () => {
    try {
      setIsRegeneratingKey(true);
      await regenerateVpnConfig();
      notifications.vpn.keyRegenerated();
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª—é—á–∞:', error);
      notifications.vpn.keyRegenerationError();
    } finally {
      setIsRegeneratingKey(false);
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
  const handleSubscriptionSuccess = () => {
    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–¥–ø–∏—Å–∫–µ
    loadSubscriptionData();
    notifications.subscription.paymentSuccess();
  };

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
  if (!isAuthenticated) {
    return null;
  }

  return (
    <PageWrapper>
      <h1 className="text-xl sm:text-2xl font-semibold text-gray-900 mb-6 sm:mb-8">
        –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç
      </h1>
      
      {/* –ë–ª–æ–∫ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–¥–ø–∏—Å–∫–µ */}
      <div className={`${cardStyles.base} mb-4 sm:mb-6`}>
        <h2 className="text-lg sm:text-xl font-semibold text-gray-900 mb-3 sm:mb-4">
          –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–ø–∏—Å–∫–µ
        </h2>
        
        {isLoadingSubscription ? (
          <div className="flex items-center justify-center py-6 sm:py-8">
            <div className="animate-spin rounded-full h-6 w-6 sm:h-8 sm:w-8 border-b-2 border-blue-600"></div>
            <span className="ml-3 text-sm sm:text-base text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏...</span>
          </div>
        ) : subscription ? (
          <>
            <div className="space-y-3 sm:space-y-4">
              <div className="flex flex-col sm:flex-row sm:justify-between sm:items-center py-2 border-b border-gray-100 last:border-b-0">
                <span className="text-sm sm:text-base text-gray-600 font-medium">–°—Ç–∞—Ç—É—Å:</span>
                <span className={`font-semibold text-sm sm:text-base ${subscription.isActive ? 'text-green-600' : 'text-red-600'}`}>
                  {subscription.isActive ? '‚úÖ –ê–∫—Ç–∏–≤–µ–Ω' : '‚ùå –ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}
                </span>
              </div>
              <div className="flex flex-col sm:flex-row sm:justify-between sm:items-center py-2 border-b border-gray-100 last:border-b-0">
                <span className="text-sm sm:text-base text-gray-600 font-medium">–û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π:</span>
                <span className={`font-semibold text-sm sm:text-base ${subscription.daysLeft <= 3 ? 'text-red-600' : 'text-gray-900'}`}>
                  {subscription.daysLeft}
                </span>
              </div>
              <div className="flex flex-col sm:flex-row sm:justify-between sm:items-center py-2 border-b border-gray-100 last:border-b-0">
                <span className="text-sm sm:text-base text-gray-600 font-medium">–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è:</span>
                <span className="font-semibold text-sm sm:text-base text-gray-900">
                  {new Date(subscription.expiresAt).toLocaleDateString('ru-RU')}
                </span>
              </div>
              <div className="flex flex-col sm:flex-row sm:justify-between sm:items-center py-2">
                <span className="text-sm sm:text-base text-gray-600 font-medium">Email:</span>
                <span className="font-semibold text-sm sm:text-base text-gray-900 break-all">{user?.email}</span>
              </div>
            </div>
            
            {/* –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ —Å–∫–æ—Ä–æ–º –æ–∫–æ–Ω—á–∞–Ω–∏–∏ */}
            {subscription.daysLeft <= 7 && subscription.isActive && (
              <div className="mt-4 p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
                <div className="flex items-center">
                  <div className="text-yellow-400 text-xl mr-3">‚ö†Ô∏è</div>
                  <div>
                    <p className="text-sm font-medium text-yellow-800">
                      –ü–æ–¥–ø–∏—Å–∫–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ {subscription.daysLeft} {subscription.daysLeft === 1 ? '–¥–µ–Ω—å' : '–¥–Ω—è'}
                    </p>
                    <p className="text-xs text-yellow-700 mt-1">
                      –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –∑–∞—Ä–∞–Ω–µ–µ, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å –¥–æ—Å—Ç—É–ø –∫ VPN
                    </p>
                  </div>
                </div>
              </div>
            )}
            
            {/* –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ */}
            <div className="mt-6 pt-4 border-t border-gray-200">
              <button
                onClick={() => setIsSubscriptionModalOpen(true)}
                className={`w-full ${buttonStyles.success}`}
              >
                –ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
              </button>
            </div>
          </>
        ) : (
          <div className="text-center py-6 text-sm sm:text-base text-gray-600">
            <div className="text-red-500 text-4xl mb-3">‚ùå</div>
            <p>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–¥–ø–∏—Å–∫–µ</p>
            <button 
              onClick={loadSubscriptionData}
              className={`mt-3 ${buttonStyles.primary} text-sm px-4 py-2`}
            >
              –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
            </button>
          </div>
        )}
      </div>

      {/* –ë–ª–æ–∫ —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ */}
      <div className={cardStyles.base}>
        <h2 className="text-lg sm:text-xl font-semibold text-gray-900 mb-4">
          –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ VPN
        </h2>
        <div className="flex flex-col sm:flex-row gap-3 sm:gap-4">
          <button
            onClick={handleDownloadConfig}
            disabled={isDownloadingConfig || !subscription?.isActive}
            className={`flex-1 ${buttonStyles.primary} ${(isDownloadingConfig || !subscription?.isActive) ? 'cursor-not-allowed' : ''}`}
            title={!subscription?.isActive ? '–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞' : ''}
          >
            {isDownloadingConfig ? (
              <>
                <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
                –°–∫–∞—á–∏–≤–∞–Ω–∏–µ...
              </>
            ) : (
              <>
                üìÅ –°–∫–∞—á–∞—Ç—å –∫–ª—é—á VPN
              </>
            )}
          </button>
          <button
            onClick={handleRegenerateKey}
            disabled={isRegeneratingKey || !subscription?.isActive}
            className={`flex-1 ${buttonStyles.secondary} ${(isRegeneratingKey || !subscription?.isActive) ? 'cursor-not-allowed' : ''}`}
            title={!subscription?.isActive ? '–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞' : ''}
          >
            {isRegeneratingKey ? (
              <>
                <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
                –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è...
              </>
            ) : (
              <>
                üîÑ –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á
              </>
            )}
          </button>
        </div>
        
        {!subscription?.isActive && (
          <div className="mt-4 p-3 bg-blue-50 border border-blue-200 rounded-lg">
            <p className="text-sm text-blue-800">
              üí° –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è VPN –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞. –ü—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ –∏–ª–∏ –ø—Ä–æ–¥–ª–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –≤—ã—à–µ.
            </p>
          </div>
        )}
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–¥–ø–∏—Å–∫–∏ */}
      <SubscriptionModal
        isOpen={isSubscriptionModalOpen}
        onClose={() => setIsSubscriptionModalOpen(false)}
        onSuccess={handleSubscriptionSuccess}
      />
    </PageWrapper>
  );
};

export default Dashboard; 